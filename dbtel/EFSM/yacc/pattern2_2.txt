};
 
EFSM::~EFSM() {
    if (_root) {
        delete _root;
        _root = 0;
    }
};

void EFSM::Print() { // print to screen
	_root->Print(0);
};

BinTree<int>* EFSM::CreateBinTree(int stateId, BinTree<int> *aParent) { // create BinTree for the default states
	BinTree<int> *s;
	s = new BinTree<int>;
	s->data = stateId;
	s->parent = aParent;
	switch(stateId) {
