/* == IDENTIFICATION ==================================================
 *
 * System           : DECT
 * Component        : S-43200A
 * Layer            : DRIVER
 * Module           : dr_lcd.c
 */


#ifndef dr_lcd_h
#define dr_lcd_h

//#include  "hmi02dat.h"

# ifdef  dr_lcd
#   define PUBLIC
# else
#   define PUBLIC extern
# endif

// gamma move from dr_lcd.c {

#define u8	unsigned char
typedef struct
{
 u8 u8_width;
 u8 u8_high;
 u8 u8_pattern[15];
}WordspatternFormat;
// }

PUBLIC u8 G_u8_dr_LCDNextCharAddr[5];
PUBLIC void p_dr_Init_lcd(void);
PUBLIC void p_dr_Test_lcd(void);
PUBLIC void p_dr_DisplayIcon(const u8 *,u8);
PUBLIC void p_dr_DisplayIcon1(const u8 *,u8);
PUBLIC void p_dr_EditChar(u8,u8,u8);
PUBLIC void p_dr_displayChar(u8,u8,u8,u8);
PUBLIC void p_dr_displayCursor(u8,u8,u8);
PUBLIC void p_dr_EnableTextBar(u8);
PUBLIC void p_dr_DisableTextBar(void);
PUBLIC void p_dr_DisplayString_Pos(const u8 *,u8,u8);
#define   DR_Left_Str             0
#define   DR_Middle_Str           1
#define   DR_Right_Str            2
PUBLIC void p_dr_DisplaySoftkey(const u8 *,u8,u8,u8);
//#define   DR_Left_Str             0
//#define   DR_Middle_Str           1
//#define   DR_Right_Str            2
#define   DR_String_ON            1
#define   DR_String_OFF           0
#define p_dr_DisplayString_Pos_Nclr(a,b,c,d);   p_dr_DisplaySoftkey(a,b,c,d);
PUBLIC void p_dr_DisplayString(const u8 *,u8);
PUBLIC void p_dr_DisplayString_Append(const u8 *u8_String,u8 u8_line);
PUBLIC void p_dr_DisplayChar_Append(u8 u8_Char,u8 u8_line);
PUBLIC void p_dr_DisplayString_Cursor_Append(const u8 *u8_String,u8 u8_Line);
PUBLIC void p_dr_DisplayString_Cursor(const u8 *u8_String,u8 u8_Line);
PUBLIC void p_dr_ClearTextLine(u8);
//PUBLIC void p_dr_DisplayLine(u8,u8);
PUBLIC void p_dr_DisplayIconInLine(const u8 *,u8,u8);
PUBLIC void p_dr_DisplayIconIn_X_Y(const u8 *,u8,u8,u8);
PUBLIC void p_dr_DisplayBlock(u8 , u8 , u8 , u8 , u8 );
PUBLIC void p_dr_DisplaySparator(u8 , u8 );
//separator line
#define DR_LCD_SPARATOR_ON   1
#define DR_LCD_SPARATOR_OFF  0
#define UP_SEPARATOR_ADRR        16*1-1
#define DOWN_SEPARATOR_ADRR      16*4-1
#define DR_SEPARATOR_StartX      2
#define DR_SEPARATOR_EndX        99

//word max height
#define DR_WordMaxHeight    15
//Background text color
#define DR_Text_BG_Color    0x7F
//foreground text color
#define DR_Text_FG_Color    0x00

//Icon Table
PUBLIC const u8 G_u8_dr_Signal_0_icon[];  //ANTENNA.bmp
PUBLIC const u8 G_u8_dr_Signal_1_icon[];
PUBLIC const u8 G_u8_dr_Signal_2_icon[];
PUBLIC const u8 G_u8_dr_Signal_3_icon[];
PUBLIC const u8 G_u8_dr_Signal_4_icon[];  //ANTENNA_4.bmp
PUBLIC const u8 G_u8_dr_Signal_5_icon[];  //ANTENNA_full.bmp

PUBLIC const u8 G_u8_dr_Battery_0_icon[]; //Battery-empty.bmp
PUBLIC const u8 G_u8_dr_Battery_1_icon[]; //Battery-1.bmp
PUBLIC const u8 G_u8_dr_Battery_2_icon[]; //Battery-2.bmp
PUBLIC const u8 G_u8_dr_BatteryFull_icon[];  //BatteryFull.bmp
PUBLIC const u8 G_u8_dr_IDLE_Picture[];
PUBLIC const u8 G_u8_dr_Redial_icon[]; //Softkey Redial ICON
PUBLIC const u8 G_u8_dr_Del_icon[]; //Softkey Del ICON
PUBLIC const u8 G_u8_dr_Right_icon[]; //Right ICON
PUBLIC const u8 u8_DashTable[];// '-----------'


PUBLIC const u8 * u8_dr_LCDIconsTable[];
/* The following defines specify the LCD-Symbols */
# define DR_Signal_0_icon          0
# define DR_Signal_1_icon          1
# define DR_Signal_2_icon          2
# define DR_Signal_3_icon          3
# define DR_Signal_4_icon          4
# define DR_Signal_5_icon          5
# define DR_Battery_0_icon         6
# define DR_Battery_1_icon         7
# define DR_Battery_2_icon         8
# define DR_IDLE_Picture           9
# define DR_TEST_COLOR00_icon      10
# define DR_TEST_COLOR01_icon      11
# define DR_TEST_COLOR02_icon      12
# define DR_TEST_COLOR03_icon      13
# define DR_TEST_COLOR04_icon      14
# define DR_TEST_COLOR05_icon      15
# define DR_TEST_COLOR06_icon      16
# define DR_TEST_COLOR07_icon      17
# define DR_TEST_COLOR08_icon      15
# define DR_TEST_COLOR09_icon      16
# define DR_TEST_COLOR10_icon      17
# define DR_TEST_COLOR11_icon      18
# define DR_TEST_COLOR12_icon      19
# define DR_TEST_COLOR13_icon      20
# define DR_Redial_icon            21

//Icon Status
#define DR02_LCD_ICON_ON     1
#define DR02_LCD_ICON_OFF    0

//PUBLIC u16 G_u16_dr_IconStatusfg;

//LCD hardware Pin definition
#define DR_LCMpLED       sys2_GPIO.PortPin[29].port_pin /* GPIO Port PIN 29 */ //added by John
#define DR_LCMpCS        sys2_GPIO.PortPin[27].port_pin /* GPIO Port PIN 27 */ //added by John
#define DR_LCMpRESET     sys2_GPIO.PortPin[25].port_pin /* GPIO Port PIN 25 */ //added by John
#define DR_LCMpWR        sys2_GPIO.PortPin[6].port_pin /* GPIO Port PIN 6 */ //added by John
#define DR_LCMpRD        sys2_GPIO.PortPin[7].port_pin /* GPIO Port PIN 7 */ //added by John
#define DR_LCMpRS        sys2_GPIO.PortPin[24].port_pin /* GPIO Port PIN 24 */ //added by John
#define DR_LCMpD0        sys2_GPIO.PortPin[8].port_pin /* GPIO Port PIN 8 */ //added by John
#define DR_LCMpD1        sys2_GPIO.PortPin[9].port_pin /* GPIO Port PIN 9 */ //added by John
#define DR_LCMpD2        sys2_GPIO.PortPin[10].port_pin /* GPIO Port PIN 10 */ //added by John
#define DR_LCMpD3        sys2_GPIO.PortPin[11].port_pin /* GPIO Port PIN 11 */ //added by John
#define DR_LCMpD4        sys2_GPIO.PortPin[12].port_pin /* GPIO Port PIN 12 */ //added by John
#define DR_LCMpD5        sys2_GPIO.PortPin[13].port_pin /* GPIO Port PIN 13 */ //added by John
#define DR_LCMpD6        sys2_GPIO.PortPin[14].port_pin /* GPIO Port PIN 14 */ //added by John
#define DR_LCMpD7        sys2_GPIO.PortPin[15].port_pin /* GPIO Port PIN 15 */ //added by John
#define DR_LCMLED       0x2000 //GPIO 29 added by John
#define DR_LCMCS        0x0800 //GPIO 27 added by John
#define DR_LCMRESET     0x0200 //GPIO 25 added by John
#define DR_LCMWR        0x0040 //GPIO 6 added by John
#define DR_LCMRD        0x0080 //GPIO 7 added by John
#define DR_LCMRS        0x0100 //GPIO 24 added by John
#define DR_LCDDataBus   0xFF00 //added by John


//TEXT LINE NUMBER IN LCD
#define DR02_LCD_TEXT_LINE1  0
#define DR02_LCD_TEXT_LINE2  1
#define DR02_LCD_TEXT_LINE3  2
#define DR02_LCD_TEXT_LINE4  3
#define DR02_LCD_TEXT_LINE5  4






                /*************************************
                * Control Register Index of SK43200A
                **************************************/   
                #define         SK43200A_ControlReg1            (0x00)
                #define         SK43200A_ControlReg2            (0x01)
                #define         SK43200A_ControlReg3            (0x02)
                #define         SK43200A_ResetCommand           (0x03)
                
        
                #define         SK43200A_XAddress               (0x04)
                #define         SK43200A_YAddress               (0x05)
                #define         SK43200A_MinXAddress            (0x07)
                #define         SK43200A_MaxXAddress            (0x08)
                #define         SK43200A_MinYAddress            (0x09)
                #define         SK43200A_MaxYAddress            (0x0A)
                #define         SK43200A_DispMemAcc             (0x0C)

                /* 支援 畫面 Window 的相關暫存器 */
                #define         SK43200A_MainDutySet            (0x0E)
                #define         SK43200A_MaDuNLineInver         (0x0F)
                #define         SK43200A_MaDuMLineShift         (0x10)
                
                /* 支援 畫面 Window 的相關暫存器 */
                #define         SK43200A_SubDutySet             (0x11)
                #define         SK43200A_SubDuNLineInver        (0x12)
                #define         SK43200A_SubDuMLineShift        (0x13)
                
                
                #define         SK43200A_COMScanAddSet          (0x15)

                /* 寫入 GRAM 的相關暫存器 */
                #define         SK43200A_SrolFixAreaPosition    (0x17)
                #define         SK43200A_SrolFixAreaWidth       (0x1B)
                #define         SK43200A_SrolStepNumb           (0x1F)

                /* 紅色調色盤 */
                #define         SK43200A_BlinkReverSet          (0x25)
                #define         SK43200A_CompleColBlinkXAdd     (0x26)
                #define         SK43200A_CompleColBlinkStaLineAdd   (0x27)
                #define         SK43200A_CompleColBlinkEndLineAdd   (0x28)
                #define         SK43200A_CompleColBlinkDataMem  (0x29)
                
                
                
                #define         SK43200A_SpeColBlinkXAdd                (0x2A)
                #define         SK43200A_SpeColBlinkStaLineAdd          (0x2B)
                #define         SK43200A_SpeColBlinkEndLineAdd          (0x2C)
                #define         SK43200A_SpeColBlinkDataMem             (0x2D)
                #define         SK43200A_SpeColSet                      (0x2E)
                
                
                #define         SK43200A_ReverseXAdd                    (0x2F)
                #define         SK43200A_ReverseStaLineAdd              (0x30)
                #define         SK43200A_ReverseEndLineAdd              (0x31)
                #define         SK43200A_ReverseDataMemAcc              (0x32)
                
                #define         SK43200A_PowerSysControlReg1            (0x34)
                #define         SK43200A_PowerSysControlReg2            (0x35)
                #define         SK43200A_PowerSysControlReg3            (0x36)
                #define         SK43200A_PowerSysControlReg4            (0x37)
                #define         SK43200A_PowerSysControlReg5            (0x38)

                /* 藍色調色盤 */
                #define         SK43200A_MainElectronicVol              (0x39)
                #define         SK43200A_SubElectronicVol               (0x3A)
                #define         SK43200A_RamTestModeSet                 (0x3D)
                
                
                #define         SK43200A_DrivModeSel                    (0x40)
                #define         SK43200A_MainRGrayDateReg1              (0x41)
                #define         SK43200A_MainRGrayDateReg2              (0x42)
                #define         SK43200A_MainRGrayDateReg3              (0x43)
                #define         SK43200A_MainRGrayDateReg4              (0x44)
                #define         SK43200A_MainRGrayDateReg5              (0x45)
                #define         SK43200A_MainRGrayDateReg6              (0x46)
                #define         SK43200A_MainRGrayDateReg7              (0x47)
                #define         SK43200A_MainRGrayDateReg8              (0x48)
                #define         SK43200A_MainGGrayDateReg1              (0x49)
                #define         SK43200A_MainGGrayDateReg2              (0x4A)
                #define         SK43200A_MainGGrayDateReg3              (0x4B)
                #define         SK43200A_MainGGrayDateReg4              (0x4C)
                #define         SK43200A_MainGGrayDateReg5              (0x4D)
                #define         SK43200A_MainGGrayDateReg6              (0x4E)
                #define         SK43200A_MainGGrayDateReg7              (0x4F)
                #define         SK43200A_MainGGrayDateReg8              (0x50)
                #define         SK43200A_MainBGrayDateReg1              (0x51)
                #define         SK43200A_MainBGrayDateReg2              (0x52)
                #define         SK43200A_MainBGrayDateReg3              (0x53)
                #define         SK43200A_MainBGrayDateReg4              (0x54)
                #define         SK43200A_SubRGrayDateReg1               (0x55)
                #define         SK43200A_SubRGrayDateReg2               (0x56)
                #define         SK43200A_SubRGrayDateReg3               (0x57)
                #define         SK43200A_SubRGrayDateReg4               (0x58)
                #define         SK43200A_SubRGrayDateReg5               (0x59)
                #define         SK43200A_SubRGrayDateReg6               (0x5A)
                #define         SK43200A_SubRGrayDateReg7               (0x5B)
                #define         SK43200A_SubRGrayDateReg8               (0x5C)
                #define         SK43200A_SubGGrayDateReg1               (0x5D)
                #define         SK43200A_SubGGrayDateReg2               (0x5E)
                #define         SK43200A_SubGGrayDateReg3               (0x5F)
                #define         SK43200A_SubGGrayDateReg4               (0x60)
                #define         SK43200A_SubGGrayDateReg5               (0x61)
                #define         SK43200A_SubGGrayDateReg6               (0x62)
                #define         SK43200A_SubGGrayDateReg7               (0x63)
                #define         SK43200A_SubGGrayDateReg8               (0x64)
                #define         SK43200A_SubBGrayDateReg1               (0x65)
                #define         SK43200A_SubBGrayDateReg2               (0x66)
                #define         SK43200A_SubBGrayDateReg3               (0x67)
                #define         SK43200A_SubBGrayDateReg4               (0x68)

                /*************************************
                * Command of SK43200A Driver
                **************************************/
                #undef  BIT0
                #undef  BIT1
                #undef  BIT2
                #undef  BIT3
                #undef  BIT4
                #undef  BIT5
                #undef  BIT6
                #undef  BIT7
//              #undef  BIT8
//              #undef  BIT9
//              #undef  BIT10
//              #undef  BIT11
//              #undef  BIT12
//              #undef  BIT13
//              #undef  BIT14
//              #undef  BIT15

                /* bit definition */
                #define         BIT0    ((u8)(1))
                #define         BIT1    ((u8)(1<<1))
                #define         BIT2    ((u8)(1<<2))
                #define         BIT3    ((u8)(1<<3))
                #define         BIT4    ((u8)(1<<4))
                #define         BIT5    ((u8)(1<<5))
                #define         BIT6    ((u8)(1<<6))
                #define         BIT7    ((u8)(1<<7))
//              #define         BIT8    ((u16)(1<<8))
//              #define         BIT9    ((u16)(1<<9))
//              #define         BIT10   ((u16)(1<<10))
//              #define         BIT11   ((u16)(1<<11))
//              #define         BIT12   ((u16)(1<<12))
//              #define         BIT13   ((u16)(1<<13))
//              #define         BIT14   ((u16)(1<<14))
//              #define         BIT15   ((u16)(1<<15))

                /*************************************
                * SK43200A_ControlReg1 Register
                **************************************/
                #define         CONTROL1_TRON_DISABLED          (BIT7)
                #define         CONTROL1_TRON_ENABLE            (0x00)
                #define         CONTROL1_DISP_ON                (BIT4)
                #define         CONTROL1_WAS_ACCESS             (BIT6)
                #define         CONTROL1_COMF_OUTPIN_OFF    (BIT5)
                #define         CONTROL1_STBY_OSC_OFF           (BIT3)
                #define         CONTROL1_HALT_INTER_STOP    (BIT2)
                
                
                #define         CONTROL1_COL_ADD_UP             (0x00)
                #define         CONTROL1_COL_ADD_DOWN           (BIT1)
                #define         CONTROL1_SCAN_DIR_UP            (0x00)
                #define         CONTROL1_SCAN_DIR_DOWN          (BIT0)
                
                

                /*************************************
                * SK43200A_ControlReg2 Register
                **************************************/         
                #define         CONTROL2_FULLSCR_DISP           (BIT7)
                #define         CONTROL2_8BIT_BUS               (BIT5)
                #define         CONTROL2_SUBDUTY_DISP           (BIT3)
                #define         X_INC_OR_DEC                    (0x00)
                #define         Y_INC_OR_DEC                    (BIT2)
                #define         X_INC_Y_INC                     (0x00)          /* X direction increment; Y direction increment */
                #define         X_DEC_Y_DEC                     (BIT1|BIT0)     /* X direction decrement; Y direction decrement */
                #define         X_INC_Y_DEC                     (BIT0)          /* X direction increment; Y direction decrement */
                #define         X_DEC_Y_INC                     (BIT1)          /* X direction decrement; Y direction increment */
                
                
                /*************************************
                * SK43200A_ResetCommand Register
                **************************************/ 
                #define         RESET_COMMAND           (BIT0)
                
                
                /*********************************************
                 * SK43200A_SrolFixAreaPosition Register R23 *
                 *********************************************/
                #define         FIXAHL          (BIT0)
                
                /******************************************
                 * SK43200A_SrolFixAreaWidth Register R27 *
                 ******************************************/
                #define         FIXAW1          (BIT1)
                #define         FIXAW0          (BIT0)
                
                /******************************************
                * SK43200A_BlinkReverSet Register       R37 *
                *****************************************/
                #define         REVERSE_DSPL                    (BIT3)  // INV
                #define         SPE_COL_BLINK_DSPL              (BIT1)  // BLD1
                #define         COM_COL_BLINK_DSPL              (BIT0)  // BLD0
                
                /*************************************
                * SK43200A_PowerSysControl Reg1~Reg5 *
                **************************************/
                #define         TEMP_CURVE_SELECT2              (BIT6)  // TCS2
                #define         TEMP_CURVE_SELECT1              (BIT5)  // TCS1
                #define         TEMP_CURVE_SELECT0              (BIT4)  // TCS0
                
                #define         BOOST_CIRCUIT                   (BIT3)  // OP3
                #define         VREF_GENERATOR                  (BIT2)  // OP2
                #define         VREG_CIRCUIT                    (BIT1)  // OP1
                #define         VF_CIRCUIT                              (BIT0)  // OP0
                
//              #define         POWER_CONTROL1_VALUE    (BOOST_CIRCUIT+VREF_GENERATOR+VREG_CIRCUIT+VF_CIRCUIT)  // TCS2~TCS0=000, OP3~OP0=1111
                
                
                #define         VLCD_INTER_RES_RATIO3   (BIT7)  // VRR3
                #define         VLCD_INTER_RES_RATIO2   (BIT6)  // VRR2
                #define         VLCD_INTER_RES_RATIO1   (BIT5)  // VRR1
                #define         VLCD_INTER_RES_RATIO0   (BIT4)  // VRR0
                
//              #define         POWER_CONTROL2_VALUE    (VLCD_INTER_RES_RATIO2+VLCD_INTER_RES_RATIO1+VLCD_INTER_RES_RATIO0) //VRR3~VRR0=0111
                
                
                #define         BIAS_VALUE2                             (BIT6)  // BIS2
                #define         BIAS_VALUE1                             (BIT5)  // BIS1
                #define         BIAS_VALUE0                             (BIT4)  // BIS0
                
//              #define         POWER_CONTROL3_VALUE    0x0000          // BIS2~BIS0=000
                
                #define         BOOST_STEP2                             (BIT6)  // MBT2
                #define         BOOST_STEP1                             (BIT5)  // MBT1 
                #define         BOOST_STEP0                             (BIT4)  // MBT0 
                
//              #define         POWER_CONTROL4_VALUE    (BOOST_STEP1+BOOST_STEP0)  //MBT2~MBT0=011
                
                #define         SEG_DRIVING_CAP1                (BIT7)  // LCS1
                #define         SEG_DRIVING_CAP0                (BIT6)  // LCS0
                
                #define         COM_DRIVING_CAP1                (BIT5)  // LCC1
                #define         COM_DRIVINE_CAP0                (BIT4)  // LCC0
                
                #define         HPM1                                    (BIT3)  // HPM1
                #define         HPM0                                    (BIT2)  // HPM0
                
                #define         PSM1                                    (BIT1)  // PSM1
                #define         PSM0                                    (BIT0)  // PSM0
                
//              #define         POWER_CONTROL5_DEFAULT_VALUE    (COM_DRIVINE_CAP0+PSM1)
                
                
                #define         MAIN_ELECTRONIC_VOLUME_VALUE    0x3C //George_feng
                
                #define         SET_RED                 0xE0
                #define         SET_GREEN               0x1C
                #define         SET_BLUE                0x03
                
                        
                /* define power on sequence */ 
//                #define SK43200A_DELAYUS                0xFE
//                #define SK43200A_DELAY100MS             0xFC
                #define SK43200A_DELAY10MS                 0xFC
                #define END_OF_TABLE                    {0xff, 0xff}
                #define MAX_SEAECH_RANGE                300   //George_feng
                
#undef PUBLIC
#endif //dr_lcd_h

// gamma update {
static const u8 G_u8_dr_Words_index[]={
//const u8 G_u8_dr_Words_index[]={
// }
/* 0x0000(00000) */     1,
/* 0x0001(00001) */     2,
/* 0x0002(00002) */     3,
/* 0x0003(00003) */     4,
/* 0x0004(00004) */     5,
/* 0x0005(00005) */     6,
/* 0x0006(00006) */     7,
/* 0x0007(00007) */     8,
/* 0x0008(00008) */     9,
/* 0x0009(00009) */    10,
/* 0x000a(00010) */    11,
/* 0x000b(00011) */    12,
/* 0x000c(00012) */    13,
/* 0x000d(00013) */    14,
/* 0x000e(00014) */    15,
/* 0x000f(00015) */    16,
/* 0x0010(00016) */    17,
/* 0x0011(00017) */    18,
/* 0x0012(00018) */    19,
/* 0x0013(00019) */    20,
/* 0x0014(00020) */    21,
/* 0x0015(00021) */    22,
/* 0x0016(00022) */    23,
/* 0x0017(00023) */    24,
/* 0x0018(00024) */    25,
/* 0x0019(00025) */    26,
/* 0x001a(00026) */    27,
/* 0x001b(00027) */    28,
/* 0x001c(00028) */    29,
/* 0x001d(00029) */    30,
/* 0x001e(00030) */    31,
/* 0x001f(00031) */    32,
/* 0x0020(00032) */    64, //' '
/* 0x0021(00033) */    34,
/* 0x0022(00034) */    35,
/* 0x0023(00035) */    71, //'#'
/* 0x0024(00036) */    37,
/* 0x0025(00037) */    38,
/* 0x0026(00038) */    39,
/* 0x0027(00039) */    70,//'''
/* 0x0028(00040) */    87,//'('
/* 0x0029(00041) */    88,//')'
/* 0x002a(00042) */    84,//'*'
/* 0x002b(00043) */    44,
/* 0x002c(00044) */    45,
/* 0x002d(00045) */    63, //'-'
/* 0x002e(00046) */    67, //'.'
/* 0x002f(00047) */    72, //'/'
/* 0x0030(00048) */    0,  //number 0
/* 0x0031(00049) */    1,  //number 1
/* 0x0032(00050) */    2,  //number 2
/* 0x0033(00051) */    3,  //number 3
/* 0x0034(00052) */    4,  //number 4
/* 0x0035(00053) */    5,  //number 5
/* 0x0036(00054) */    6,  //number 6
/* 0x0037(00055) */    7,  //number 7
/* 0x0038(00056) */    8,  //number 8
/* 0x0039(00057) */    9,  //number 9
/* 0x003a(00058) */    68, //':'
/* 0x003b(00059) */    60,
/* 0x003c(00060) */    61,
/* 0x003d(00061) */    62,
/* 0x003e(00062) */    63,
/* 0x003f(00063) */    69, //'?'
/* 0x0040(00064) */    65,
/* 0x0041(00065) */    10, //ascii A
/* 0x0042(00066) */    11, //ascii B
/* 0x0043(00067) */    12, //ascii C
/* 0x0044(00068) */    13, //ascii D
/* 0x0045(00069) */    14, //ascii E
/* 0x0046(00070) */    15, //ascii F
/* 0x0047(00071) */    16, //ascii G
/* 0x0048(00072) */    17, //ascii H
/* 0x0049(00073) */    18, //ascii I
/* 0x004a(00074) */    19, //ascii J
/* 0x004b(00075) */    20, //ascii K
/* 0x004c(00076) */    21, //ascii L
/* 0x004d(00077) */    22, //ascii M
/* 0x004e(00078) */    23, //ascii N
/* 0x004f(00079) */    24, //ascii O
/* 0x0050(00080) */    25, //ascii P
/* 0x0051(00081) */    26, //ascii Q
/* 0x0052(00082) */    27, //ascii R
/* 0x0053(00083) */    28, //ascii S
/* 0x0054(00084) */    29, //ascii T
/* 0x0055(00085) */    30, //ascii U
/* 0x0056(00086) */    31, //ascii V
/* 0x0057(00087) */    32, //ascii W
/* 0x0058(00088) */    33, //ascii X
/* 0x0059(00089) */    34, //ascii Y
/* 0x005a(00090) */    35, //ascii Z
/* 0x005b(00091) */    65, //'['
/* 0x005c(00092) */    93,
/* 0x005d(00093) */    66, //']'
/* 0x005e(00094) */    95,
/* 0x005f(00095) */    73, //'_'
/* 0x0060(00096) */    97,
/* 0x0061(00097) */    36, //ascii a
/* 0x0062(00098) */    37, //ascii b
/* 0x0063(00099) */    38, //ascii c
/* 0x0064(00100) */    39, //ascii d
/* 0x0065(00101) */    40, //ascii e
/* 0x0066(00102) */    41, //ascii f
/* 0x0067(00103) */    42, //ascii g
/* 0x0068(00104) */    43, //ascii h
/* 0x0069(00105) */    44, //ascii i
/* 0x006a(00106) */    45, //ascii j
/* 0x006b(00107) */    46, //ascii k
/* 0x006c(00108) */    47, //ascii l
/* 0x006d(00109) */    48, //ascii m
/* 0x006e(00110) */    49, //ascii n
/* 0x006f(00111) */    50, //ascii o
/* 0x0070(00112) */    51, //ascii p
/* 0x0071(00113) */    52, //ascii q
/* 0x0072(00114) */    53, //ascii r
/* 0x0073(00115) */    54, //ascii s
/* 0x0074(00116) */    55, //ascii t
/* 0x0075(00117) */    56, //ascii u
/* 0x0076(00118) */    57, //ascii v
/* 0x0077(00119) */    58, //ascii w
/* 0x0078(00120) */    59, //ascii x
/* 0x0079(00121) */    60, //ascii y
/* 0x007a(00122) */    61, //ascii z
/* 0x007b(00123) */    62, //...
/* 0x007c(00124) */   125,
/* 0x007d(00125) */   126,
/* 0x007e(00126) */   127,
/* 0x007f(00127) */   128,
/* 0x0080(00128) */   129,
/* 0x0081(00129) */   130,
/* 0x0082(00130) */   131,
/* 0x0083(00131) */    86,//BIG '#'
/* 0x0084(00132) */   133,
/* 0x0085(00133) */   134,
/* 0x0086(00134) */   135,
/* 0x0087(00135) */   136,
/* 0x0088(00136) */   137,
/* 0x0089(00137) */   138,
/* 0x008a(00138) */    85,//BIG '*'
/* 0x008b(00139) */   140,
/* 0x008c(00140) */   141,
/* 0x008d(00141) */   142,
/* 0x008e(00142) */   143,
/* 0x008f(00143) */   144,
/* 0x0090(00144) */   74,//B0
/* 0x0091(00145) */   75,//B1
/* 0x0092(00146) */   76,//B2
/* 0x0093(00147) */   77,//B3
/* 0x0094(00148) */   78,//B4
/* 0x0095(00149) */   79,//B5
/* 0x0096(00150) */   80,//B6
/* 0x0097(00151) */   81,//B7
/* 0x0098(00152) */   82,//B8
/* 0x0099(00153) */   83,//B9
/* 0x009a(00154) */   155,
/* 0x009b(00155) */   156,
/* 0x009c(00156) */   157,
/* 0x009d(00157) */   158,
/* 0x009e(00158) */   159,
/* 0x009f(00159) */   160,
/* 0x00a0(00160) */   161,
/* 0x00a1(00161) */   162,
/* 0x00a2(00162) */   163,
/* 0x00a3(00163) */   164,
/* 0x00a4(00164) */   165,
/* 0x00a5(00165) */   166,
/* 0x00a6(00166) */   167,
/* 0x00a7(00167) */   168,
/* 0x00a8(00168) */   169,
/* 0x00a9(00169) */   170,
/* 0x00aa(00170) */   171,
/* 0x00ab(00171) */   172,
/* 0x00ac(00172) */   173,
/* 0x00ad(00173) */   174,
/* 0x00ae(00174) */   175,
/* 0x00af(00175) */   176,
/* 0x00b0(00176) */   177,
/* 0x00b1(00177) */   178,
/* 0x00b2(00178) */   179,
/* 0x00b3(00179) */   180,
/* 0x00b4(00180) */   181,
/* 0x00b5(00181) */   182,
/* 0x00b6(00182) */   183,
/* 0x00b7(00183) */   184,
/* 0x00b8(00184) */   185,
/* 0x00b9(00185) */   186,
/* 0x00ba(00186) */   187,
/* 0x00bb(00187) */   188,
/* 0x00bc(00188) */   189,
/* 0x00bd(00189) */   190,
/* 0x00be(00190) */   191,
/* 0x00bf(00191) */   192,
/* 0x00c0(00192) */   193,
/* 0x00c1(00193) */   194,
/* 0x00c2(00194) */   195,
/* 0x00c3(00195) */   196,
/* 0x00c4(00196) */   197,
/* 0x00c5(00197) */   198,
/* 0x00c6(00198) */   199,
/* 0x00c7(00199) */   200,
/* 0x00c8(00200) */   201,
/* 0x00c9(00201) */   202,
/* 0x00ca(00202) */   203,
/* 0x00cb(00203) */   204,
/* 0x00cc(00204) */   205,
/* 0x00cd(00205) */   206,
/* 0x00ce(00206) */   207,
/* 0x00cf(00207) */   208,
/* 0x00d0(00208) */   209,
/* 0x00d1(00209) */   210,
/* 0x00d2(00210) */   211,
/* 0x00d3(00211) */   212,
/* 0x00d4(00212) */   213,
/* 0x00d5(00213) */   214,
/* 0x00d6(00214) */   215,
/* 0x00d7(00215) */   216,
/* 0x00d8(00216) */   217,
/* 0x00d9(00217) */   218,
/* 0x00da(00218) */   219,
/* 0x00db(00219) */   220,
/* 0x00dc(00220) */   221,
/* 0x00dd(00221) */   222,
/* 0x00de(00222) */   223,
/* 0x00df(00223) */   224,
/* 0x00e0(00224) */   225,
/* 0x00e1(00225) */   226,
/* 0x00e2(00226) */   227,
/* 0x00e3(00227) */   228,
/* 0x00e4(00228) */   229,
/* 0x00e5(00229) */   230,
/* 0x00e6(00230) */   231,
/* 0x00e7(00231) */   232,
/* 0x00e8(00232) */   233,
/* 0x00e9(00233) */   234,
/* 0x00ea(00234) */   235,
/* 0x00eb(00235) */   236,
/* 0x00ec(00236) */   237,
/* 0x00ed(00237) */   238,
/* 0x00ee(00238) */   239,
/* 0x00ef(00239) */   240,
/* 0x00f0(00240) */   241,
/* 0x00f1(00241) */   242,
/* 0x00f2(00242) */   243,
/* 0x00f3(00243) */   244,
/* 0x00f4(00244) */   245,
/* 0x00f5(00245) */   246,
/* 0x00f6(00246) */   247,
/* 0x00f7(00247) */   248,
/* 0x00f8(00248) */   249,
/* 0x00f9(00249) */   250,
/* 0x00fa(00250) */   251,
/* 0x00fb(00251) */   252,
/* 0x00fc(00252) */   253,
/* 0x00fd(00253) */   254,
/* 0x00fe(00254) */    89, //Cursor
/* 0x00ff(00255) */   0
};

WordspatternFormat static const G_u8_dr_Wordspattern[]={
{ 5,15,{0xFF,0xF8,0x88,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x88,0xFF,0xFF,0xFF} },  //0.bmp
{ 5,15,{0xFF,0xF8,0xC8,0xC8,0xC8,0xC8,0xC8,0xC8,0xC8,0x08,0x88,0xC8,0xFF,0xFF,0xFF} },  //1.bmp
{ 5,15,{0xFF,0xF8,0x00,0x38,0x98,0x98,0xC8,0xC8,0xE0,0xE0,0x20,0x88,0xFF,0xFF,0xFF} },  //2.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0xE0,0xE0,0xE0,0x88,0xE0,0xE0,0x20,0x88,0xFF,0xFF,0xFF} },  //3.bmp
{ 5,15,{0xFF,0xF8,0xE0,0xE0,0xE0,0x00,0x20,0x20,0xA0,0x80,0xC0,0xC0,0xFF,0xFF,0xFF} },  //4.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0xE0,0xE0,0xE0,0x08,0x38,0x38,0x38,0x00,0xFF,0xFF,0xFF} },  //5.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0x20,0x20,0x20,0x08,0x38,0x38,0x38,0x88,0xFF,0xFF,0xFF} },  //6.bmp
{ 5,15,{0xFF,0xF8,0x98,0x98,0x98,0x98,0xC8,0xC8,0xC8,0xE0,0xE0,0x00,0xFF,0xFF,0xFF} },  //7.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0x20,0x20,0x20,0x88,0x20,0x20,0x20,0x88,0xFF,0xFF,0xFF} },  //8.bmp
{ 5,15,{0xFF,0xF8,0x88,0xE0,0xE0,0xE0,0x80,0x20,0x20,0x20,0x20,0x88,0xFF,0xFF,0xFF} },  //9.bmp
{ 5,15,{0xFF,0xF8,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x88,0xFF,0xFF,0xFF} },  //BA.bmp
{ 5,15,{0xFF,0xF8,0x08,0x20,0x20,0x20,0x20,0x08,0x20,0x20,0x20,0x08,0xFF,0xFF,0xFF} },  //BB.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0x38,0x38,0x38,0x38,0x38,0x38,0x20,0x88,0xFF,0xFF,0xFF} },  //BC.bmp
{ 5,15,{0xFF,0xF8,0x08,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x08,0xFF,0xFF,0xFF} },  //BD.bmp
{ 4,15,{0xFF,0xF0,0x00,0x30,0x30,0x30,0x30,0x10,0x30,0x30,0x30,0x00,0xFF,0xFF,0xFF} },  //BE.bmp
{ 4,15,{0xFF,0xF0,0x30,0x30,0x30,0x30,0x30,0x10,0x30,0x30,0x30,0x00,0xFF,0xFF,0xFF} },  //BF.bmp
{ 5,15,{0xFF,0xF8,0x90,0x20,0x20,0x20,0x00,0x38,0x38,0x20,0x20,0x88,0xFF,0xFF,0xFF} },  //BG.bmp
{ 5,15,{0xFF,0xF8,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0xFF,0xFF,0xFF} },  //BH.bmp
{ 4,15,{0xFF,0xF0,0x00,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x00,0xFF,0xFF,0xFF} },  //BI.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0x20,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xFF,0xFF,0xFF} },  //BJ.bmp
{ 6,15,{0xFF,0xFC,0x30,0x30,0x30,0x24,0x04,0x0C,0x24,0x24,0x30,0x30,0xFF,0xFF,0xFF} },  //BK.bmp
{ 5,15,{0xFF,0xF8,0x00,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0xFF,0xFF,0xFF} },  //BL.bmp
{ 7,15,{0xFF,0xFE,0x38,0x38,0x38,0x38,0x28,0x00,0x00,0x10,0x38,0x7C,0xFF,0xFF,0xFF} },  //BM.bmp
{ 6,15,{0xFF,0xFC,0x30,0x30,0x20,0x20,0x00,0x00,0x10,0x10,0x30,0x30,0xFF,0xFF,0xFF} },  //BN.bmp
{ 7,15,{0xFF,0xFE,0x82,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x82,0xFF,0xFF,0xFF} },  //BO.bmp
{ 5,15,{0xFF,0xF8,0x38,0x38,0x38,0x38,0x08,0x20,0x20,0x20,0x20,0x08,0xFF,0xFF,0xFF} },  //BP.bmp
{ 5,15,{0xFF,0xE0,0x88,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x88,0xFF,0xFF,0xFF} },  //BQ.bmp
{ 5,15,{0xFF,0xF8,0x20,0x20,0x20,0x20,0x08,0x20,0x20,0x20,0x20,0x08,0xFF,0xFF,0xFF} },  //BR.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0xE0,0xE0,0xC8,0x98,0x38,0x38,0x20,0x88,0xFF,0xFF,0xFF} },  //BS.bmp
{ 6,15,{0xFF,0xFC,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0x00,0xFF,0xFF,0xFF} },  //BT.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xFF,0xFF,0xFF} },  //BU.bmp
{ 5,15,{0xFF,0xF8,0xD8,0xD8,0x88,0x88,0x20,0x20,0x20,0x20,0x20,0x20,0xFF,0xFF,0xFF} },  //BV.bmp
{ 8,15,{0xFF,0xFF,0x99,0x99,0x99,0x81,0x24,0x24,0x24,0x3C,0x3C,0x3C,0xFF,0xFF,0xFF} },  //BW.bmp
{ 5,15,{0xFF,0xF8,0x20,0x20,0x20,0x88,0x88,0x88,0x88,0x20,0x20,0x20,0xFF,0xFF,0xFF} },  //BX.bmp
{ 6,15,{0xFF,0xFC,0xCC,0xCC,0xCC,0xCC,0xCC,0x84,0x84,0x30,0x30,0x30,0xFF,0xFF,0xFF} },  //BY.bmp
{ 5,15,{0xFF,0xF8,0x00,0x38,0x38,0x98,0x98,0xC8,0xC8,0xE0,0xE0,0x00,0xFF,0xFF,0xFF} },  //BZ.bmp
{ 5,15,{0xFF,0xF8,0x90,0x20,0x20,0x80,0xE0,0x20,0x88,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SA.bmp
{ 5,15,{0xFF,0xF8,0x48,0x20,0x20,0x20,0x20,0x20,0x08,0x38,0x38,0x38,0xFF,0xFF,0xFF} },  //SB.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0x38,0x38,0x38,0x20,0x88,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SC.bmp
{ 5,15,{0xFF,0xF8,0x90,0x20,0x20,0x20,0x20,0x20,0x80,0xE0,0xE0,0xE0,0xFF,0xFF,0xFF} },  //SD.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0x38,0x08,0x20,0x20,0x88,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SE.bmp
{ 4,15,{0xFF,0xF0,0x90,0x90,0x90,0x90,0x90,0x90,0x00,0x90,0x90,0xC0,0xFF,0xFF,0xFF} },  //SF.bmp
{ 5,15,{0xFF,0x08,0xE0,0x80,0x20,0x20,0x20,0x20,0x90,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SG.bmp
{ 5,15,{0xFF,0xF8,0x20,0x20,0x20,0x20,0x20,0x20,0x08,0x38,0x38,0x38,0xFF,0xFF,0xFF} },  //SH.bmp
{ 2,15,{0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x40,0x00,0xC0,0xFF,0xFF,0xFF} },  //SI.bmp
{ 3,15,{0xFF,0x20,0x80,0x80,0x80,0x80,0x80,0xA0,0xE0,0xC0,0x80,0xE0,0xFF,0xFF,0xFF} },  //SJ.bmp
{ 5,15,{0xFF,0xF8,0x20,0x20,0x08,0x18,0x08,0x20,0x20,0x38,0x38,0x38,0xFF,0xFF,0xFF} },  //SK.bmp
{ 2,15,{0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF} },  //SL.bmp
{ 8,15,{0xFF,0xFF,0x24,0x24,0x24,0x24,0x24,0x24,0x49,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //SM.bmp
{ 5,15,{0xFF,0xF8,0x20,0x20,0x20,0x20,0x20,0x20,0x48,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SN.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0x20,0x20,0x20,0x20,0x88,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SO.bmp
{ 5,15,{0xFF,0x38,0x38,0x08,0x20,0x20,0x20,0x20,0x48,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SP.bmp
{ 5,15,{0xFF,0xE0,0xE0,0x80,0x20,0x20,0x20,0x20,0x90,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SQ.bmp
{ 4,15,{0xFF,0xF0,0x30,0x30,0x30,0x30,0x30,0x00,0x40,0xF0,0xF0,0xF0,0xFF,0xFF,0xFF} },  //SR.bmp
{ 5,15,{0xFF,0xF8,0x88,0x20,0xE0,0x88,0x38,0x20,0x88,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SS.bmp
{ 4,15,{0xFF,0xF0,0xC0,0x90,0x90,0x90,0x90,0x90,0x00,0x90,0xD0,0xF0,0xFF,0xFF,0xFF} },  //ST.bmp
{ 5,15,{0xFF,0xF8,0x90,0x20,0x20,0x20,0x20,0x20,0x20,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SU.bmp
{ 5,15,{0xFF,0xF8,0xD8,0x88,0x88,0x20,0x20,0x20,0x20,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SV.bmp
{ 7,15,{0xFF,0xFE,0x92,0x92,0x82,0x28,0x28,0x38,0x38,0xFE,0xFE,0xFE,0xFF,0xFF,0xFF} },  //SW.bmp
{ 5,15,{0xFF,0xF8,0x20,0x20,0x20,0x88,0x88,0x20,0x20,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SX.bmp
{ 5,15,{0xFF,0x88,0xE0,0xE0,0x80,0x20,0x20,0x20,0x20,0xF8,0xF8,0xF8,0xFF,0xFF,0xFF} },  //SY.bmp
{ 4,15,{0xFF,0xF0,0x00,0x30,0x90,0x90,0xC0,0xC0,0x00,0xF0,0xF0,0xF0,0xFF,0xFF,0xFF} },  //SZ.bmp
{ 5,15,{0xFF,0xFF,0x57,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //...
{ 5,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //'-'
{ 3,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //64' '
{ 4,15,{0xFF,0x9F,0xBF,0xBF,0xBF,0xBF,0xBF,0xBF,0xBF,0xBF,0xBF,0x9F,0xFF,0xFF,0xFF} },  //65'['
{ 4,15,{0xFF,0x9F,0xDF,0xDF,0xDF,0xDF,0xDF,0xDF,0xDF,0xDF,0xDF,0x9F,0xFF,0xFF,0xFF} },  //66']'
{ 3,15,{0xFF,0xFF,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //67'.'
{ 3,15,{0xFF,0xFF,0xFF,0xFF,0xBF,0xFF,0xFF,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //68':'
{ 5,15,{0xFF,0xFF,0xDF,0xFF,0xDF,0xEF,0x77,0x8F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //69'?'
{ 3,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x9F,0x9F,0xFF,0xFF,0xFF} },  //70'''
{ 5,15,{0xFF,0xFF,0xAF,0xAF,0x07,0xAF,0xAF,0xAF,0x07,0xAF,0xAF,0xFF,0xFF,0xFF,0xFF} },  //71'#'
{ 6,15,{0xFF,0xFF,0xFF,0x7F,0xBF,0xDF,0xEF,0xF7,0xFB,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //72'/'
{ 5,15,{0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //73'_'
{ 7,14,{0x82,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x82,0xFF} },  //74 B0.bmp
{ 7,14,{0xE6,0xE6,0xE6,0xE6,0xE6,0xE6,0xE6,0xE6,0xE6,0xE6,0xE6,0x86,0xC6,0xE6,0xFF} },  //75 B1.bmp
{ 7,14,{0x00,0x38,0x3E,0x9E,0x9E,0xCE,0xE6,0xF2,0xF2,0xF8,0xF8,0x38,0x38,0x82,0xFF} },  //76 B2.bmp
{ 7,14,{0x82,0x38,0x38,0xF8,0xF8,0xF8,0xF8,0xC2,0xF8,0xF8,0xF8,0x38,0x38,0x82,0xFF} },  //77 B3.bmp
{ 7,14,{0xF2,0xF2,0xF2,0xF2,0x00,0x32,0x32,0x92,0x92,0xC2,0xC2,0xE2,0xE2,0xF2,0xFF} },  //78 B4.bmp
{ 7,14,{0x82,0x38,0x38,0xF8,0xF8,0xF8,0xF8,0x02,0x3E,0x3E,0x3E,0x3E,0x3E,0x00,0xFF} },  //79 B5.bmp
{ 7,14,{0x82,0x38,0x38,0x38,0x38,0x38,0x38,0x02,0x3E,0x3E,0x3E,0x3E,0x38,0x82,0xFF} },  //80 B6.bmp
{ 7,14,{0xCE,0xCE,0xCE,0xCE,0xCE,0xE6,0xE6,0xF2,0xF2,0xF8,0xF8,0x38,0x38,0x00,0xFF} },  //81 B7.bmp
{ 7,14,{0x82,0x38,0x38,0x38,0x38,0x38,0x38,0x82,0x38,0x38,0x38,0x38,0x38,0x82,0xFF} },  //82 B8.bmp
{ 7,14,{0x82,0x38,0xF8,0xF8,0xF8,0xF8,0xF8,0x80,0x38,0x38,0x38,0x38,0x38,0x82,0xFF} },  //83 B9.bmp
{ 5,15,{0xF8,0xF8,0xF8,0xF8,0xA8,0xD8,0x00,0xD8,0xA8,0xF8,0xF8,0xF8,0xF8,0xF8,0xF8} },  //84 SMALL_START.bmp
{ 8,15,{0xFF,0xFF,0xFF,0xE7,0x24,0xA5,0xC3,0xA5,0x24,0xE7,0xFF,0xFF,0xFF,0xFF,0xFF} },  //85 BIG_START.bmp
{ 8,15,{0xFF,0xFF,0x99,0x99,0x00,0x99,0x99,0x99,0x00,0x99,0x99,0xFF,0xFF,0xFF,0xFF} },  //86 BIG_#.bmp
{ 3,15,{0xE0,0xC0,0xA0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xA0,0xC0,0xE0,0xE0,0xE0} },  //87 SMALL(.bmp
{ 3,15,{0xE0,0x60,0xA0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xA0,0x60,0xE0,0xE0,0xE0} },  //88 SMALL).bmp
{ 5,15,{0xFF,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0xFF,0xFF} },  //89 Cursor.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //90 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //91 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //92 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //93 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //94 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //95 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //96 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //97 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //98 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //99 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //100 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //101 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //102 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //103 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //104 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //105 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //106 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //107 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //108 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //109 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //110 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //111 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //112 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //113 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //114 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //115 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //116 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //117 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //118 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //119 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //120 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //121 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //122 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //123 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //124 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //125 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //126 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //127 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //128 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //129 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //130 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //131 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //132 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //133 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //134 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //135 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //136 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //137 NULL.bmp
{ 1,15,{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF} },  //138 NULL.bmp
};

// draw rectangle
/* ====================================================================
 * Display Block
 * parameter: u8_Line : y axis
 *            u8_Start_X : start X address
 *            u8_Start_Y : start Y address
 *            u8_End_X   : end X address
 *            u8_End_Y   : end Y address
 *            u8_Data    : Display Data value
 * ====================================================================*/
//void p_dr_DisplayLine(u8 u8_Start_X , u8 u8_Start_Y , u8 u8_End_X, u8 u8_End_Y , u8 u8_Switch)
void p_dr_DisplayBlock(u8 u8_Start_X , u8 u8_Start_Y , u8 u8_End_X, u8 u8_End_Y ,u8 u8_Data)
{
 u8 u8_i,u8_j;

 for(u8_i=u8_Start_Y ; u8_i<u8_End_Y ; u8_i++)
 {
  p_dr_LCD_WRITE(SK43200A_XAddress,u8_Start_X);//Set start X axis
  p_dr_LCD_WRITE(SK43200A_YAddress,u8_i);//Set Y axis
  for(u8_j=u8_Start_X ; u8_j<u8_End_X ; u8_j++)
   p_dr_LCD_WRITE(SK43200A_DispMemAcc,u8_Data);//R12:LCD RAM
 }
}

/* ====================================================================
 * Display one Char
 * parameter: u8_x_location : x position
 *            u8_y_location : y position
 *            u8_pattern_ptr : Word table pointer
 *            u8_show_type : 0 -->Clear Char
 *                           1 -->Contrast
 *                           others -->Normal Display
 * ====================================================================*/
  //drawing one char
void p_dr_displayChar(u8 u8_x_location,u8 u8_y_location,u8 u8_pattern_ptr,u8 u8_show_type)
{
  u8 u8_char_width,u8_char_high,u8_i,u8_j;
  u8 u8_text;

  //u8_char_width= G_u8_dr_Wordspattern[u8_pattern_ptr][0];
  u8_char_width= G_u8_dr_Wordspattern[u8_pattern_ptr].u8_width;
  //u8_char_high= G_u8_dr_Wordspattern[u8_pattern_ptr][1];
  u8_char_high= G_u8_dr_Wordspattern[u8_pattern_ptr].u8_high;

  for(u8_i=0; u8_i<u8_char_high; u8_i++)
  {
   //u8_text=G_u8_dr_Wordspattern[u8_pattern_ptr][u8_i+2];
   u8_text=G_u8_dr_Wordspattern[u8_pattern_ptr].u8_pattern[u8_i];

   switch (u8_show_type)
   {
    case  0://delete
            u8_text = DR_Text_BG_Color;
            break;
    case  1://Contrast
            u8_text = ~u8_text;
            break;
    default:
            break;
   }

   p_dr_LCD_WRITE(5,u8_y_location-u8_i);//y address
   p_dr_LCD_WRITE(4,u8_x_location);//start x address

   for(u8_j=0; u8_j<u8_char_width; u8_j++)
   {
    if( (u8_text<<u8_j) & 0x80 )
    p_dr_LCD_WRITE(SK43200A_DispMemAcc,DR_Text_BG_Color);//R12:LCD RAM
    else
    p_dr_LCD_WRITE(SK43200A_DispMemAcc,DR_Text_FG_Color);//R12:LCD RAM
   }
   p_dr_LCD_WRITE(SK43200A_DispMemAcc,DR_Text_BG_Color);//R12:Display RAM:drawing space
  }

}
