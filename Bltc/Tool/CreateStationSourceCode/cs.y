/* BNF for createstation :
example : refer to input file "stationscr.txt" */

%{
#include "c_interface.h"

char modelName[100];
char desc[1000];
char stationDesc[1000];
char sKeys[500];

extern char cVars[10000];
%}

%start input

%token	C_VARS TI_DECLARE AI_DECLARE CI_DECLARE NUM STR MODEL STATION DESCRIPTION ITEM DELAY_100MS WAIT_KEYIN ID

%% /* Grammar rules and actions follow */
input:
		  declares  stations
	{
		model_setName("");
		model_addStations();
		models_addModel();
	}
		| declares  models
;

declares:
		  /* empty */
		| declares declare
;

declare:
		  c_vars | ti_declare | ai_declare | ci_declare
	{
		#ifdef DEBUG
		items_dipslay();
		#endif
	}
;

c_vars:
		  C_VARS { strcpy(cVars, $1); }
;

ti_declare:
		  TI_DECLARE '{' ti_names '}'
;

ai_declare:
		  AI_DECLARE '{' ai_names '}'
;

ci_declare:
		  CI_DECLARE '{' ci_names '}'
;

ti_names:
		  ti_name
		| ti_names ti_name
;

ti_name:
		  NUM STR {  items_add(TEST_ITEM_TYPE, $1, $2); }
;

ai_names:
		  ai_name
		| ai_names ai_name
;

ai_name:
		  NUM STR {  items_add(ACTION_ITEM_TYPE, $1, $2); }
;

ci_names:
		  ci_name
		| ci_names ci_name
;

ci_name:
		  NUM STR {  items_add(CONTROL_ITEM_TYPE, $1, $2); }
;

models:
		  model
	{
		models_addModel();
		stations_reset();
		model_reset();
	}
		| models model
	{
		models_addModel();
		stations_reset();
		model_reset();
	}
;

model:  
		  MODEL '=' model_name stations
	{
		model_setName($3);
		model_addStations();
	}
;

model_name:
		  STR { strcpy(modelName, $1); $$ = modelName; }
;

stations:
		  station
	{
		stations_addStation();
		station_reset();
		#ifdef DEBUG
		stations_display();
		#endif
	}  
		| stations station	
	{
		stations_addStation();
		station_reset();
		#ifdef DEBUG
		stations_display();
		#endif	
	}  
;

station:  
		  station_id
		| station_id ITEM item_list
;

station_id:
		  STATION NUM	{	station_setId(atoi($2)); }
		| STATION NUM DESCRIPTION ':' STR	{	station_setId(atoi($2)); station_setDescription($5); }
;

item_list:
		  NUM
	{
		station_addItem($1);
	}
		| item_list NUM
	{
		station_addItem($2);
	}
		| item_list DELAY_100MS '(' NUM ')'
	{
		station_addDelay($4);
	}
		| item_list WAIT_KEYIN { sKeys[0] = '\0'; }
		  '(' key ')'
	{
		station_addWaitKeyIn(sKeys);
	}
;

key:
		  ID	{ strcat(sKeys, $1); }
		| key '|' ID	{ strcat(sKeys, "|"); strcat(sKeys, $3); }

%%/* A lexical scanner generated by flex */
